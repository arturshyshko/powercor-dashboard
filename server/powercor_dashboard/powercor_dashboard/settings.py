"""
Django settings for powercor_dashboard project.

Generated by 'django-admin startproject' using Django 2.0.3.

For more information on this file, see
https://docs.djangoproject.com/en/2.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.0/ref/settings/
"""

import os
import dj_database_url
from dotenv import load_dotenv

PROJECT_NAME = 'powercor_dashboard'
PROJECT_NAME_DASHED = PROJECT_NAME.replace('_', '-')
# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
PROJECT_ROOT = os.path.dirname(os.path.dirname(BASE_DIR))

DOTENV_FILE = os.environ.get('DOTENV_PATH', os.path.join(PROJECT_ROOT, '.env'))
if os.path.exists(DOTENV_FILE):
    load_dotenv(DOTENV_FILE)
else:
    DOTENV_FILE = None


APP_ENV = os.environ.get('APP_ENV', 'prod')
# ENV variables that define setupserver command behavior
CREATE_DATABASE = os.environ.get('CREATE_DATABASE', 'False') == 'True'
RUN_MIGRATIONS = os.environ.get('RUN_MIGRATIONS', 'True') == 'True'
COLLECT_STATIC = os.environ.get('COLLECT_STATIC', 'True') == 'True'
LOAD_FIXTURES = os.environ.get('LOAD_FIXTURES', 'False') == 'True'
LOAD_DATA = os.environ.get('LOAD_DATA', 'True') == 'True'


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'c1u!$&0)y*tpf+f__45*tvmze*_1_d^34h&r$yxl&8bvg*e3o6'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = [
    f'{PROJECT_NAME_DASHED}.herokuapp.com',
    f'{PROJECT_NAME_DASHED}-stage.herokuapp.com',
    f'{PROJECT_NAME_DASHED}-dev.herokuapp.com',
]

ALLOWED_HOSTS += os.environ.get('ALLOWED_HOSTS', '').split(',')


# Application definition

INSTALLED_APPS = [
    'core',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    'dashboard.apps.DashboardConfig',

    'rest_framework',
    'corsheaders',
    'constance',
    'constance.backends.database',
]

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'spa.middleware.SPAMiddleware',
]

ROOT_URLCONF = f'{PROJECT_NAME}.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = f'{PROJECT_NAME}.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.0/ref/settings/#databases

DATABASE_URL = os.environ.get('DATABASE_URL', f'postgres://postgres@localhost/{PROJECT_NAME_DASHED}')
DATABASES = {
    'default': dj_database_url.parse(DATABASE_URL),
}


# User settings
AUTHENTICATION_BACKENDS = ('powercor_dashboard.backends.EmailBackend', 'django.contrib.auth.backends.ModelBackend')
AUTH_USER_MODEL = 'core.User'

# Password validation
# https://docs.djangoproject.com/en/2.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.0/howto/static-files/

STATICFILES_STORAGE = 'spa.storage.SPAStaticFilesStorage'

STATIC_URL = '/static/'

PROJECT_DIR = os.path.dirname(os.path.abspath(__file__))

STATIC_ROOT = os.path.join(PROJECT_DIR, 'static')

STATICFILES_DIRS = [
    os.path.join(BASE_DIR, '../../client/web/build/static'),
    os.path.join(BASE_DIR, '../../client/web/build')
]


# Settings for REST Framework
REST_FRAMEWORK = {
    'COERCE_DECIMAL_TO_STRING': False
}


CORS_ORIGIN_WHITELIST = (
    f'{PROJECT_NAME}.herokuapp.com',
    f'{PROJECT_NAME}-stage.herokuapp.com',
    f'{PROJECT_NAME}-dev.herokuapp.com',
    'localhost:3000',
    '127.0.0.1:3000',
    'localhost:8000',
    '127.0.0.1:8000',
)


# Settings for constance
from powercor_dashboard.constance_config import *


# Local deployment overrides
IS_LOCAL_DEPLOYMENT = os.environ.get('IS_LOCAL_DEPLOYMENT', 'False') == 'True'
if IS_LOCAL_DEPLOYMENT:
    # Remove password validators for easy password setup
    AUTH_PASSWORD_VALIDATORS = []
    ALLOWED_HOSTS = '*'


# Production environment settings
if APP_ENV == 'prod':
    DEBUB = False
    LOAD_FIXTURES = False
